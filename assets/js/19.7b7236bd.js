(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{185:function(t,n,e){"use strict";e.r(n);var a=e(0),r=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"数据库的设计"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据库的设计","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据库的设计")]),t._v(" "),e("hr"),t._v(" "),e("pre",[e("code",[t._v("1. 分类\n\t1. 一对一\n\t\t* 如: 人和身份证\n\t\t* 一个人只有一个身份证  一个身份证只能对应一个人\n\t2. 一对多\n\t\t* 部门和员工\n\t\t* 一个部门有多个员工, 一个员工只能对应一个部门\n\t3. 多对多\n\t\t* 学生和课程\n\t\t* 一个学生可以选很多门课  一个课程也可以被很多学生选择\n2. 实现关系\n\t1. 一对多(多对一)\n\t\t1. 员工和部门\n\t\t\t* 在多的一方建立外键 指向另一方的外键\n\t2. 多对多\n\t\t1. 需要借助第三张表 中间表\n\t3. 一对一\n\t\t1. 在任意一方建立唯一外键 关联另一张表的主键\n\t\t\t* 让外键唯一 unique\n\t\t2. 主键对应也可以\n\t\t3. 合成一张表\n")])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"数据库设计范式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计范式","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据库设计范式")]),t._v(" "),e("pre",[e("code",[t._v("* 设计数据库时 需要遵循一些规范\n\t- 第一范式: 每一列都是不可分割的原子数据项\n\t- 第二范式: 在1NF的基础上, 非码属性别虚完全依赖于候选码\n\t- 第三方式: 在2NF的基础上, 任何非主属性不依赖于其它非主属性\n")])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"备份"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#备份","aria-hidden":"true"}},[t._v("#")]),t._v(" 备份")]),t._v(" "),e("pre",[e("code",[t._v("1. 命令行\n\t1. mysqldump -u用户名 -p密码 database > 保存的路径\n")])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"还原"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#还原","aria-hidden":"true"}},[t._v("#")]),t._v(" 还原")]),t._v(" "),e("pre",[e("code",[t._v("1. 登陆数据库\n2. 创建数据库\n3. 使用数据库\n4. 执行文件. source 文件路径\n")])])])}],!1,null,null,null);n.default=r.exports}}]);